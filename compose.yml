services:
  # === Web Application ===
  spring:
    container_name: chat-service2
    build: .
    ports:
      - "8443:8443"
    volumes:
      - ./ssl:/app/ssl
    depends_on:
      mysql:
        condition: service_healthy
      kafka1:
        condition: service_started

  # === Database: MySQL ===
  mysql:
    container_name: chat-mysql2
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: chat_service
    volumes:
      - ./mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]
      interval: 5s
      retries: 10

  # === Database: MongoDB ===

  # === Message Broker: Zookeeper ===
  zookeeper:
    container_name: zookeeper2
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  # === Message Broker: Kafka ===
  kafka:
    container_name: kafka2
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ./kafka_data:/var/run/docker.sock
    ports:
      - "9092:9092"