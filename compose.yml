services:
  # === Web Application ===
  spring:
    container_name: chat-service
    build: .
    ports:
      - 8443:8443
    volumes:
      - ./ssl:/app/ssl
    depends_on:
      mysql:
        condition: service_healthy

  # === Database ===
  mysql:
    container_name: chat-mysql
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: chat_service
    volumes:
      - ./mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      interval: 5s
      retries: 10

#  # === Message Broker: Zookeeper ===
#  zookeeper:
#    container_name: zookeeper
#    image: zookeeper
#    restart: always
#    hostname: root
#    environment:
#      ZOO_MY_ID: 1
#      ZOO_SERVERS:
#    ports:
#      - 2181:2181
#
#  # === Message Broker: Kafka ===
#  kafka:
#    container_name: kafka
#    image: apache/kafka
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_PROCESS_ROLES: broker, controller
#    ports:
#      - 9092:9092
#
#  # === Database: MongoDB ===
#  mongo:
#    container_name: mongo
#    image: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: 1234
#    volumes:
#      - ./mongo_data:/data/db
#    ports:
#      - 27017:27017
#
#  # === MongoDB Admin UI ===
#  mongo-express:
#    container_name: mongo-express
#    restart: always
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
#      ME_CONFIG_MONGODB_URL: mongodb://root:1234@mongo:27017/
#      ME_CONFIG_BASICAUTH: false
#    ports:
#      - 8081:8081