services:
  # === Web Application ===
  spring:
    container_name: spring
    build: .
    ports:
      - "8443:8443"
    volumes:
      - ./ssl:/app/ssl
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started

  # === Database: MySQL ===
  mysql:
    container_name: mysql
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: chat_service
    volumes:
      - ./mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]
      interval: 5s
      retries: 10

  # === Message Broker: Kafka ===
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ./kafka_data:/kafka
    depends_on:
      zookeeper:
        condition: service_healthy

  # === Message Broker: Zookeeper ===
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181"]
      interval: 5s
      retries: 10

  # === Database: MongoDB ===